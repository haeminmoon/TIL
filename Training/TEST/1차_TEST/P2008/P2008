<div>
  <pre>
<!-- 문제 설명 -->
일반적으로 N!은 "1*2*3* ... N"이와 같이 표현한다. 
하지만 세호는 아래와 같이 N!을 소인수분해 형태로 특이하게 표현하고 싶어한다.

2! = 2^1
3! = 2^1*3^1
7! = 2^4*3^2*5^1*7^1
[^ : 지수 표현 , * : 곱하기 표현]

세호를 도와서 N!을 소인수분해 형태로 출력해 주는 프로그램을 작성해보자.

  </pre>

  <div class="format-box">INPUT FORMAT</div>
  <pre>
<!-- 입력 설명 -->
- 입력은 표준입력으로 제공된다.
- 입력은 여러 테스트 케이스가 포함될 수 있다.
- 첫째 줄 에는 테스트 케이스의 개수를 나타내는 자연수 T 가 주어진다. 이후 차례로 T개의 테스트 케이스가 주어진다 (1 ≤ T ≤ 100)
- 둘째 줄부터 T+1번째 줄까지 테스트 케이스 N이 입력된다. 각 테스트 케이스는 개행문자(newline)로 구분된다. (1 ≤ N ≤ 100000000)

  </pre>
  <div class="format-box">OUTPUT FORMAT</div>
  <pre>
<!-- 출력 설명 -->
- 각 테스트 케이스의 답을 표준출력으로 출력해야 한다.
- 각 테스트 케이스마다 첫줄에는 "Case #C"와 개행문자(newline) 출력하여야 한다. 이때 C는 테스트 케이스의 번호이다. 이후 답과 개행문자(newline)를 출력한다.
- 답 출력 시, 문자 사이의 공백은 없으며 소수는 작은 수가 먼저 나오도록 출력한다. [지수 표현은 ^, 곱하기 부호는 *를 사용한다.]

  </pre>
  <hr class="hr-1">
  <div class="example-box"> EXAMPLE </div>
  <table class="table-io-case table">
    <thead>
      <tr>
        <th>입력</th>
        <th>출력</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>
          <pre>
<!-- 샘플 입력 -->
3
3
7
10

          </pre>
        </td>
        <td>
          <pre>
<!-- 샘플 출력 -->
Case #1
2^1*3^1
Case #2
2^4*3^2*5^1*7^1
Case #3
2^8*3^4*5^2*7^1

          </pre>
        </td>
      </tr>
    </tbody>
  </table>
</div>
